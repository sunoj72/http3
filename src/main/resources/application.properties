spring:
  application:
    name: http3
  profiles:
    active: local


# logging.level.org.eclipse=DEBUG

server.http2.enabled=true
server.compression.enabled=true
server.compression.min-response-size=10
server.shutdown=graceful

## SSL
server.port=8443
server.http3.port=8444
# server.ssl.certificate=classpath:pki/fileServer.crt
# server.ssl.certificate-private-key=classpath:pki/fileServer.key
# server.ssl.trust-certificate=classpath:pki/ca.crt
server.ssl.key-store=classpath:pki/fileServer.jks
server.ssl.key-store-password=dna123
server.ssl.key-store-type=JKS
server.ssl.key-alias=fileserver
server.ssl.key-password=dna123


# server.jetty.acceptors= # Number of acceptor threads to use.
# server.jetty.selectors= # Number of selector threads to use.
# Maximum size in bytes of the HTTP post or put content.
server.jetty.max-http-post-size=20971520
# server.jetty.accesslog.append=false # Append to log.
# server.jetty.accesslog.date-format=dd/MMM/yyyy:HH:mm:ss Z # Timestamp format of the request log.
# Enable access log.
server.jetty.accesslog.enabled=true
# server.jetty.accesslog.extended-format=false # Enable extended NCSA format.
# server.jetty.accesslog.file-date-format= # Date format to place in log file name.
# Log filename. If not specified, logs will be redirected to "System.err".
server.jetty.accesslog.filename=access.log
# server.jetty.accesslog.locale= # Locale of the request log.
# server.jetty.accesslog.log-cookies=false # Enable logging of the request cookies.
# server.jetty.accesslog.log-latency=false # Enable logging of request processing time.
# server.jetty.accesslog.log-server=false # Enable logging of the request hostname.
# server.jetty.accesslog.retention-period=31 # Number of days before rotated log files are deleted.
# server.jetty.accesslog.time-zone=GMT # Timezone of the request log.


## Specifies the maximum number of concurrent requests per session.
# jetty.http2.maxConcurrentStreams=128
## Specifies the initial stream receive window (client to server) in bytes.
# jetty.http2.initialStreamRecvWindow=524288
## Specifies the initial session receive window (client to server) in bytes.
# jetty.http2.initialSessionRecvWindow=1048576
## Specifies the maximum number of keys in all SETTINGS frames received by a session.
# jetty.http2.maxSettingsKeys=64
## Specifies the maximum number of bad frames and pings per second,
## after which a session is closed to avoid denial of service attacks.
# jetty.http2.rateControl.maxEventsPerSecond=50

## Specifies the maximum number of concurrent requests per session.
# jetty.http2c.maxConcurrentStreams=128
## Specifies the initial stream receive window (client to server) in bytes.
# jetty.http2c.initialStreamRecvWindow=524288
## Specifies the initial session receive window (client to server) in bytes.
# jetty.http2c.initialSessionRecvWindow=1232896
## Specifies the maximum number of keys in all SETTINGS frames received by a session.
# jetty.http2c.maxSettingsKeys=64
## Specifies the maximum number of bad frames and pings per second,
## after which a session is closed to avoid denial of service attacks.
# jetty.http2c.rateControl.maxEventsPerSecond=50

## The host/address to bind the connector to.
#server.jetty.quic.host=0.0.0.0
## The port the connector listens on.
#server.jetty.quic.port=8444
## The connector idle timeout, in milliseconds.
#server.jetty.quic.idleTimeout=30000
## Specifies the maximum number of concurrent requests per session.
#server.jetty.quic.maxBidirectionalRemoteStreams=128
## Specifies the session receive window (client to server) in bytes.
#server.jetty.quic.sessionRecvWindow=4194304
## Specifies the stream receive window (client to server) in bytes.
#server.jetty.quic.bidirectionalStreamRecvWindow=2097152
## Specifies the stream idle timeout, in milliseconds.
#server.jetty.http3.streamIdleTimeout=30000